import { Vector } from '../../Math/vector';
import { Color } from '../../Color';
import { Shader } from './shader';
import { BatchRenderer } from './renderer';
import { BatchCommand } from './batch';
import { WebGLGraphicsContextInfo } from './ExcaliburGraphicsContextWebGL';
import { Pool, Poolable } from '../../Util/Pool';
export declare class DrawLine implements Poolable {
    _pool?: Pool<this>;
    color: Color;
    start: Vector;
    end: Vector;
    dispose(): this;
}
export declare class LineRenderer extends BatchRenderer<DrawLine> {
    private _contextInfo;
    constructor(gl: WebGLRenderingContext, _contextInfo: WebGLGraphicsContextInfo);
    buildShader(gl: WebGLRenderingContext): Shader;
    addLine(start: Vector, end: Vector, color: Color): void;
    buildBatchVertices(vertexBuffer: Float32Array, batch: BatchCommand<DrawLine>): number;
    renderBatch(gl: WebGLRenderingContext, _batch: BatchCommand<DrawLine>, vertexCount: number): void;
}

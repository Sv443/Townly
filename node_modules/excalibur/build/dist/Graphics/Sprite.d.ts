import { Graphic, GraphicOptions } from './Graphic';
import { ImageSource } from './ImageSource';
import { ExcaliburGraphicsContext } from './Context/ExcaliburGraphicsContext';
import { Sprite as LegacySprite } from '../Drawing/Sprite';
export declare type SourceView = {
    x: number;
    y: number;
    width: number;
    height: number;
};
export declare type DestinationSize = {
    width: number;
    height: number;
};
export interface SpriteOptions {
    /**
     * Image to create a sprite from
     */
    image: ImageSource;
    /**
     * By default the source is the entire dimension of the [[ImageSource]]
     */
    sourceView?: {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    /**
     * By default the size of the final sprite is the size of the [[ImageSource]]
     */
    destSize?: {
        width: number;
        height: number;
    };
}
export declare class Sprite extends Graphic {
    image: ImageSource;
    sourceView: SourceView;
    destSize: DestinationSize;
    static from(image: ImageSource): Sprite;
    constructor(options: GraphicOptions & SpriteOptions);
    private _updateSpriteDimensions;
    protected _preDraw(ex: ExcaliburGraphicsContext, x: number, y: number): void;
    _drawImage(ex: ExcaliburGraphicsContext, x: number, y: number): void;
    /**
     * Create a ImageSource from legacy texture
     * @param sprite
     */
    static fromLegacySprite(sprite: LegacySprite): Sprite;
    /**
     * Converts a sprite to a Legacy sprite
     * @deprecated
     * @param sprite
     * @returns LegacyDrawing.Sprite
     */
    static toLegacySprite(sprite: Sprite): LegacySprite;
    clone(): Sprite;
}
